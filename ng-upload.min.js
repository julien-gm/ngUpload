angular.module("ngUpload",[]).directive("uploadSubmit",["$parse",function(t){function a(t,e){t=angular.element(t);var n=t.parent();return e=e.toLowerCase(),n&&n[0].tagName.toLowerCase()===e?n:n?a(n,e):null}return{restrict:"AC",link:function(e,n,o){var r={};r.enableControls=o.uploadOptionsEnableControls,o.hasOwnProperty("uploadOptionsConvertHidden")&&(r.convertHidden="false"!=o.uploadOptionsConvertHidden),o.hasOwnProperty("uploadOptionBeforeSubmit")&&(r.beforeSubmitCallback=o.uploadOptionBeforeSubmit),r.titles={startUpload:o.hasOwnProperty("uploadOptionsTitle")?o.uploadOptionsTitle:"Click to start upload.",wait:o.hasOwnProperty("uploadOptionsWaitTitle")?o.uploadOptionsWaitTitle:"Please wait...",uploadInProgress:o.hasOwnProperty("uploadOptionsUploadInProgressTitle")?o.uploadOptionsUploadInProgressTitle:"Uploading, please wait...",displayStatus:o.hasOwnProperty("uploadOptionsDisplayStatus")?o.uploadOptionsDisplayStatus:!0};var i=a(n,"form"),l=t(o.uploadSubmit);if(!angular.isFunction(l)){var p="The expression on the ngUpload directive does not point to a valid function.";throw p+"\n"}n.bind("click",function(t){if(t&&t.preventDefault(),!n.attr("disabled")){if(void 0!==r.beforeSubmitCallback){var a=e.$apply(function(){return e[r.beforeSubmitCallback](e,t)});if(a===!1)return!1}var o=angular.element("<iframe id='upload_iframe' name='upload_iframe' border='0' width='0' height='0' style='width: 0px; height: 0px; border: none; display: none' />");i.parent().append(o),o.bind("load",function(){var t=o[0],a=t.contentDocument||t.contentWindow.document,i=a.body.innerText||a.body.textContent;try{i=JSON.parse(i)}catch(p){console&&console.log("WARN: XHR response is not valid json")}e.$$phase?l(e,{content:i,completed:!0}):e.$apply(function(){l(e,{content:i,completed:!0})}),""!==i&&setTimeout(function(){o.remove()},250),n.attr("disabled",null),n.attr("title",r.titles.startUpload)}),e.$$phase?l(e,{content:r.titles.wait,completed:!1}):e.$apply(function(){l(e,{content:r.titles.wait,completed:!1})});var p=!0;r.enableControls||(n.attr("disabled","disabled"),p=!1),n.attr("title",(r.titles.displayStatus?p?"[ENABLED]: ":"[DISABLED]: ":"")+r.titles.uploadInProgress),r.convertHidden&&angular.forEach(i.find("input"),function(t){t=angular.element(t),t.attr("ng-model")&&t.attr("type")&&"hidden"==t.attr("type")&&t.attr("value",e.$eval(t.attr("ng-model")))}),i[0].submit()}}).attr("title",r.titles.startUpload)}}}]).directive("ngUpload",["$parse","$document",function(t,a){function e(t){var e,n=a.find("head");return angular.forEach(n.find("meta"),function(a){a.getAttribute("name")===t&&(e=a)}),angular.element(e)}return{restrict:"AC",link:function(t,a,n){var o={};n.hasOwnProperty("uploadOptionsEnableRailsCsrf")&&(o.enableRailsCsrf="false"!=n.uploadOptionsEnableRailsCsrf),a.attr("target","upload_iframe"),a.attr("method","post");var r=-1==a.attr("action").indexOf("?")?"?":"&";if(a.attr("action",a.attr("action")+r+"_t="+(new Date).getTime()),a.attr("enctype","multipart/form-data"),a.attr("encoding","multipart/form-data"),o.enableRailsCsrf){var i=angular.element("<input />");i.attr("class","upload-csrf-token"),i.attr("type","hidden"),i.attr("name",e("csrf-param").attr("content")),i.val(e("csrf-token").attr("content")),a.append(i)}}}}]);